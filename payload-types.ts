/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    'action-plan': ActionPlan;
    client: Client;
    users: User;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    'action-plan': ActionPlanSelect<false> | ActionPlanSelect<true>;
    client: ClientSelect<false> | ClientSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Plans d'action
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "action-plan".
 */
export interface ActionPlan {
  id: number;
  reference: string;
  title: string;
  owner: string;
  dueDate: string;
  priority: 'Low' | 'Medium' | 'High' | 'Urgent';
  status: 'Not started' | 'In progress' | 'Completed' | 'Blocked';
  progress: number;
  comments: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * Clients
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "client".
 */
export interface Client {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  birthDate?: string | null;
  riskScore: number;
  behavioralScore: number;
  country?: string | null;
  profession?: string | null;
  fundsSource?: ('Salaire' | 'Épargne' | 'Héritage' | 'Vente bien') | null;
  paymentMethod?: ('Carte bancaire' | 'Virement bancaire' | 'PayPal' | 'Paysafecard') | null;
  lastIP?: string | null;
  kycValidated: boolean;
  pep: boolean;
  scoringDetails?:
    | {
        label?: string | null;
        value?: number | null;
        id?: string | null;
      }[]
    | null;
  behavioralDetails?:
    | {
        label?: string | null;
        value?: number | null;
        id?: string | null;
      }[]
    | null;
  scoreHistory?:
    | {
        scoreDate?: string | null;
        score?: number | null;
        id?: string | null;
      }[]
    | null;
  behaviorIndicators: {
    riskyGames: number;
    gameSpeed: number;
    lastIPChange: number;
    unusualDevice: number;
    thirdPartyPayer: number;
  };
  alerts?:
    | {
        alertDate?: string | null;
        message?: string | null;
        status?: ('open' | 'closed') | null;
        id?: string | null;
      }[]
    | null;
  status: 'Abandon' | 'Déclaration de soupçon' | 'Blocage' | 'default';
  comments?:
    | {
        commentDate: string;
        user: number | User;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'action-plan';
        value: number | ActionPlan;
      } | null)
    | ({
        relationTo: 'client';
        value: number | Client;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "action-plan_select".
 */
export interface ActionPlanSelect<T extends boolean = true> {
  reference?: T;
  title?: T;
  owner?: T;
  dueDate?: T;
  priority?: T;
  status?: T;
  progress?: T;
  comments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "client_select".
 */
export interface ClientSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  birthDate?: T;
  riskScore?: T;
  behavioralScore?: T;
  country?: T;
  profession?: T;
  fundsSource?: T;
  paymentMethod?: T;
  lastIP?: T;
  kycValidated?: T;
  pep?: T;
  scoringDetails?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  behavioralDetails?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  scoreHistory?:
    | T
    | {
        scoreDate?: T;
        score?: T;
        id?: T;
      };
  behaviorIndicators?:
    | T
    | {
        riskyGames?: T;
        gameSpeed?: T;
        lastIPChange?: T;
        unusualDevice?: T;
        thirdPartyPayer?: T;
      };
  alerts?:
    | T
    | {
        alertDate?: T;
        message?: T;
        status?: T;
        id?: T;
      };
  status?: T;
  comments?:
    | T
    | {
        commentDate?: T;
        user?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}